[toplevel]

running_list =ec2 describe-instances --query "Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value,Type:InstanceType,Status:State.Name,ID:InstanceId}" --filters Name=instance-state-name,Values=running --output table


running-instances = ec2 describe-instances \
    --filter Name=instance-state-name,Values=running \
    --output table \
    --query 'Reservations[].Instances[].{PublicIP:PublicIpAddress,ID: InstanceId,Name: Tags[?Key==`Name`].Value | [0],Type: InstanceType, Platform: Platform || `Linux`}'


gm-amis = ec2 describe-images \
    --owners {{ AWS_GENYMOTION_OWNERID }} \
    --query "reverse(sort_by(Images, &CreationDate))[*].[ImageId,Name,Description]" \
    --output table


myip =
  !f() {
   curl https://text.ipv4.myip.wtf/ 
  }; f

allow-my-ip =
  !f() {
    my_ip=$(aws myip)
    aws ec2 authorize-security-group-ingress --group-name ${1} --protocol ${2} --port ${3} --cidr $my_ip/32
  }; f

allow-my-ip-all =
  !f() {
    aws allow-my-ip {{ AWS_SECURITY_GROUP }} all all
  }; f
